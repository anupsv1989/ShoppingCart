{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\MyGitHub\\\\AdobeShoppingCart\\\\ShoppingCart\\\\components\\\\ShoppingList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Card, Col, Row, Button } from 'antd';\nimport actions from \"../redux/action\";\nimport { connect } from \"react-redux\";\nconst {\n  onAddItemtoCart,\n  getItemsinCart\n} = actions;\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"searchFilteredList\", val => {\n      console.log(\"Search value\", val);\n      let tempArr = [];\n      let currentData = this.props.listData;\n      currentData.map(item => {\n        if (item.name == val) {\n          tempArr.push(item);\n        }\n      });\n      console.log(\"filtered Array \", tempArr);\n      this.setState({\n        displayList: tempArr\n      });\n    });\n\n    _defineProperty(this, \"amountFilteredList\", rangeVal => {\n      // if the price range is between rangeval then add that item to another array\n      let tempArr = [];\n      let currentData = this.props.listData;\n      currentData.map(item => {\n        if (item.price.actual > rangeVal[0] && item.price.actual < rangeVal[1]) {\n          tempArr.push(item);\n        }\n      });\n      console.log(\"filtered Array \", tempArr);\n      this.setState({\n        displayList: tempArr\n      });\n    });\n\n    _defineProperty(this, \"addItemtoCart\", (item, index) => {\n      console.log(\"Item --> \", item);\n      console.log(\"Index --> \", index);\n      console.log(\"onclick item --> \", this.props.itemsInCart);\n      let dataObj = {\n        index,\n        item\n      };\n      this.props.onAddItemtoCart(dataObj);\n    });\n\n    this.state = {\n      existingItemsinCart: [],\n      displayList: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"items in cart on update\", nextProps);\n    this.setState({\n      displayList: nextProps.listData\n    });\n\n    if (nextProps.applyRangeFilter.length > 0) {\n      this.amountFilteredList(nextProps.applyRangeFilter);\n    }\n\n    if (nextProps.applySearchFilter != \"\") {\n      this.searchFilteredList(nextProps.applySearchFilter);\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      displayList: this.props.listData\n    });\n    this.props.getItemsinCart();\n  }\n\n  render() {\n    console.log(\"shoppingListData cart ITems >>>>>>>\", this.props.itemsInCart);\n    const {\n      displayList\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"site-card-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, displayList.map((item, index) => __jsx(Col, {\n      span: 4,\n      className: \"listCols\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, __jsx(Card, {\n      style: {\n        padding: \"7px\"\n      },\n      cover: __jsx(\"img\", {\n        alt: \"example\",\n        src: \"https://cdn.britannica.com/s:700x500/77/170477-050-1C747EE3/Laptop-computer.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, item.name), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 47\n      }\n    }, \" \\u20B9\", item.price.actual, \" \"), \" \"), __jsx(\"span\", {\n      style: {\n        textDecoration: \"line-through\",\n        size: \"6px\",\n        fontWeight: \"bold\",\n        color: \"#A9A9A9\",\n        marginLeft: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \" \", item.price.display), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, \"  \", item.discount, \" % off\")), __jsx(Button, {\n      type: \"primary\",\n      shape: \"round\",\n      size: \"middle\",\n      onClick: () => this.addItemtoCart(item, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"Add to Cart\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemsInCart: state.itemsInCart,\n    applySearchFilter: state.applySearchFilter,\n    applyRangeFilter: state.applyRangeFilter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onAddItemtoCart,\n  getItemsinCart\n})(ShoppingList);","map":{"version":3,"sources":["D:/RandDChamber/MyGitHub/AdobeShoppingCart/ShoppingCart/components/ShoppingList.js"],"names":["Component","Card","Col","Row","Button","actions","connect","onAddItemtoCart","getItemsinCart","ShoppingList","constructor","props","val","console","log","tempArr","currentData","listData","map","item","name","push","setState","displayList","rangeVal","price","actual","index","itemsInCart","dataObj","state","existingItemsinCart","componentWillReceiveProps","nextProps","applyRangeFilter","length","amountFilteredList","applySearchFilter","searchFilteredList","componentDidMount","render","padding","textDecoration","size","fontWeight","color","marginLeft","display","discount","addItemtoCart","mapStateToProps"],"mappings":"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","sourcesContent":["\r\nimport { Component } from 'react';\r\nimport { Card, Col, Row, Button } from 'antd';\r\n\r\nimport actions from \"../redux/action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { onAddItemtoCart, getItemsinCart } = actions;\r\n\r\nclass ShoppingList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            existingItemsinCart: [],\r\n            displayList: []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"items in cart on update\", nextProps)\r\n        this.setState({\r\n            displayList: nextProps.listData\r\n        })\r\n        if (nextProps.applyRangeFilter.length > 0) {\r\n            this.amountFilteredList(nextProps.applyRangeFilter);\r\n        }\r\n        if (nextProps.applySearchFilter != \"\") {\r\n            this.searchFilteredList(nextProps.applySearchFilter);\r\n        }\r\n    }\r\n\r\n    searchFilteredList = (val) => {\r\n        console.log(\"Search value\", val)\r\n        let tempArr = [];\r\n        let currentData = this.props.listData;\r\n\r\n        currentData.map(item => {\r\n            if (item.name == val) {\r\n                tempArr.push(item)\r\n            }\r\n        })\r\n        console.log(\"filtered Array \", tempArr);\r\n        this.setState({\r\n            displayList: tempArr\r\n        })\r\n\r\n    }\r\n\r\n    amountFilteredList = (rangeVal) => {\r\n        // if the price range is between rangeval then add that item to another array\r\n        let tempArr = [];\r\n        let currentData = this.props.listData;\r\n\r\n        currentData.map(item => {\r\n            if ((item.price.actual > rangeVal[0]) && (item.price.actual < rangeVal[1])) {\r\n                tempArr.push(item)\r\n            }\r\n        })\r\n        console.log(\"filtered Array \", tempArr);\r\n        this.setState({\r\n            displayList: tempArr\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            displayList: this.props.listData\r\n        })\r\n        this.props.getItemsinCart();\r\n    }\r\n\r\n    addItemtoCart = (item, index) => {\r\n        console.log(\"Item --> \", item)\r\n        console.log(\"Index --> \", index)\r\n        console.log(\"onclick item --> \", this.props.itemsInCart)\r\n\r\n        let dataObj = {\r\n            index,\r\n            item\r\n        }\r\n\r\n\r\n        this.props.onAddItemtoCart(dataObj);\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"shoppingListData cart ITems >>>>>>>\", this.props.itemsInCart)\r\n        const { displayList } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n\r\n                        {displayList.map((item, index) =>\r\n                            <Col span={4} className=\"listCols\" key={index}>\r\n                                <Card\r\n                                    style={{ padding: \"7px\" }}\r\n                                    cover={<img alt=\"example\" src=\"https://cdn.britannica.com/s:700x500/77/170477-050-1C747EE3/Laptop-computer.jpg\" />}\r\n                                >\r\n\r\n                                    <p>{item.name}</p>\r\n                                    <p>\r\n                                        <span><strong> &#8377;{item.price.actual} </strong> </span>\r\n                                        <span style={{ textDecoration: \"line-through\", size: \"6px\", fontWeight: \"bold\", color: \"#A9A9A9\", marginLeft: \"8px\" }}> {item.price.display}</span>\r\n                                        <span>  {item.discount} % off</span>\r\n                                    </p>\r\n                                    <Button type=\"primary\" shape=\"round\" size=\"middle\" onClick={() => this.addItemtoCart(item, index)}>\r\n                                        Add to Cart\r\n                                    </Button>\r\n\r\n                                </Card>\r\n\r\n\r\n\r\n                            </Col>\r\n                        )\r\n                        }\r\n\r\n\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemsInCart: state.itemsInCart,\r\n        applySearchFilter: state.applySearchFilter,\r\n        applyRangeFilter: state.applyRangeFilter\r\n    };\r\n};\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, { onAddItemtoCart, getItemsinCart }\r\n)(ShoppingList);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}