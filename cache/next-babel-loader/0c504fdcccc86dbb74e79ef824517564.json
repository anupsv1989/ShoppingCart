{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from \"react\";\nimport { Card, Col, Row, Button } from 'antd';\nimport Link from 'next/link';\nimport actions from \"../redux/action\";\nimport { connect } from \"react-redux\";\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nvar getItemsinCart = actions.getItemsinCart;\n\nvar CartList = /*#__PURE__*/function (_Component) {\n  _inherits(CartList, _Component);\n\n  var _super = _createSuper(CartList);\n\n  function CartList(props) {\n    var _this2;\n\n    _classCallCheck(this, CartList);\n\n    _this2 = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this2), \"calculatePriceSum\", function () {\n      var price = 0;\n      var discountedPrice = 0;\n\n      _this2.state.cartDisplayItems.map(function (x) {\n        price += x.item.price.actual;\n        discountedPrice += x.item.price.display;\n      });\n\n      var discPrice = discountedPrice - price;\n\n      _this2.setState({\n        totalPriceOfItems: price,\n        totalPriceDisplay: discountedPrice,\n        totalDiscountedPrice: discPrice\n      });\n\n      return price;\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"increment\", function (item, index) {\n      var price = _this2.state.totalPriceOfItems;\n      var discPrice = _this2.state.totalDiscountedPrice;\n      var firstPrice = _this2.state.totalPriceDisplay;\n      price += item.price.actual;\n      firstPrice += item.price.display;\n      discPrice = firstPrice - price;\n\n      _this2.setState(_defineProperty({\n        totalPriceOfItems: price,\n        totalPriceDisplay: firstPrice,\n        totalDiscountedPrice: discPrice\n      }, index + item.name, _this2.state[index + item.name] ? _this2.state[index + item.name] + 1 : _this2.state.initialItems + 1));\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"decrement\", function (item, index) {\n      var price = _this2.state.totalPriceOfItems;\n      var discPrice = _this2.state.totalDiscountedPrice;\n      var firstPrice = _this2.state.totalPriceDisplay;\n\n      if (_this2.state[index + item.name] != undefined) {\n        price -= item.price.actual;\n        firstPrice -= item.price.display;\n        discPrice = firstPrice - price;\n      }\n\n      _this2.setState(_defineProperty({\n        totalPriceOfItems: price,\n        totalPriceDisplay: firstPrice,\n        totalDiscountedPrice: discPrice\n      }, index + item.name, _this2.state[index + item.name] ? _this2.state[index + item.name] - 1 : _this2.state.initialItems - 1));\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"removeItems\", function (item, idx) {\n      var arr = _this2.state.cartDisplayItems;\n\n      var _this = _assertThisInitialized(_this2);\n\n      var index = arr.map(function (x) {\n        return x.key;\n      }).indexOf(item.key);\n      arr.splice(index, 1);\n\n      _this2.setState({\n        cartDisplayItems: arr\n      }, function () {\n        if (_this.state.cartDisplayItems.length > 0) {\n          _this.calculatePriceSum();\n        }\n      });\n    });\n\n    _this2.state = {\n      cartDisplayItems: [],\n      initialItems: 1,\n      totalPriceOfItems: 0,\n      totalDiscountedPrice: 0,\n      totalPriceDisplay: 0\n    };\n    return _this2;\n  }\n\n  _createClass(CartList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.setState({\n        cartDisplayItems: this.props.itemsInCart\n      }, function () {\n        if (_this.props.itemsInCart && _this.props.itemsInCart.length > 0) _this.calculatePriceSum();\n      });\n      console.log(\" this.props.itemsInCart did mount\", this.props.itemsInCart);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"NExt props in cartjs\", nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var itemsInCart = this.props.itemsInCart;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"cartContainerDiv\"\n      }, this.state.cartDisplayItems && this.state.cartDisplayItems.length > 0 ? __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"cartContainerDiv__cartLeftNav\"\n      }, __jsx(\"div\", null, this.state.cartDisplayItems.map(function (i, index) {\n        return __jsx(Row, {\n          gutter: 16,\n          key: index,\n          className: \"cartContainerDiv__cartLeftNav--Row\"\n        }, __jsx(Col, {\n          span: 6\n        }, __jsx(\"div\", {\n          className: \"cartContainerDiv__cartLeftNav--cartListDiv\"\n        }, __jsx(\"img\", {\n          alt: \"example\",\n          src: \"https://cdn.britannica.com/s:700x500/77/170477-050-1C747EE3/Laptop-computer.jpg\"\n        }))), __jsx(Col, {\n          span: 6\n        }, __jsx(\"div\", {\n          className: \"cartContainerDiv__cartLeftNav--cartListText\"\n        }, __jsx(\"span\", null, i.item.name), __jsx(\"p\", null, __jsx(\"span\", null, __jsx(\"strong\", null, \"\\u20B9 \", i.item.price.actual), \" \"), __jsx(\"span\", {\n          className: \"shoppingListWrap__listCols--cardprice\"\n        }, i.item.price.display), __jsx(\"span\", {\n          className: \"shoppingListWrap__listCols--carddiscount\"\n        }, i.item.discount, \" % off\")))), __jsx(Col, {\n          span: 6\n        }, __jsx(\"div\", {\n          className: \"cartContainerDiv__cartLeftNav--cartListText\"\n        }, __jsx(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(PlusOutlined, null),\n          size: \"middle\",\n          onClick: function onClick() {\n            return _this3.increment(i.item, index);\n          }\n        }), __jsx(Button, {\n          type: \"dashed\",\n          style: {\n            margin: \"5px\"\n          }\n        }, _this3.state[index + i.item.name] > 0 ? _this3.state[index + i.item.name] : _this3.state.initialItems), __jsx(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(MinusOutlined, null),\n          size: \"middle\",\n          disabled: _this3.state[index + i.item.name] == 1 ? true : false,\n          onClick: function onClick() {\n            return _this3.decrement(i.item, index);\n          }\n        }))), __jsx(Col, {\n          span: 6\n        }, __jsx(\"div\", {\n          className: \"cartContainerDiv__cartLeftNav--cartListText\"\n        }, __jsx(Button, {\n          type: \"link\",\n          danger: true,\n          onClick: function onClick() {\n            return _this3.removeItems(i.item, index);\n          }\n        }, __jsx(\"strong\", null, \" Remove \")))));\n      }))), __jsx(\"div\", {\n        className: \"cartContainerDiv__cartRightNav\"\n      }, __jsx(Card, {\n        title: \"Price Details\",\n        className: \"cartContainerDiv__cartRightNav--card\"\n      }, __jsx(Row, {\n        gutter: 16,\n        className: \"cartContainerDiv__cartRightNav--row\"\n      }, __jsx(Col, {\n        span: 16\n      }, \"Price\"), __jsx(Col, {\n        span: 8\n      }, this.state.totalPriceDisplay)), __jsx(Row, {\n        gutter: 16,\n        className: \"cartContainerDiv__cartRightNav--row\"\n      }, __jsx(Col, {\n        span: 16\n      }, \"Discount\"), __jsx(Col, {\n        span: 8\n      }, this.state.totalDiscountedPrice)), __jsx(\"hr\", null), __jsx(Row, {\n        gutter: 16,\n        className: \"cartContainerDiv__cartRightNav--row\"\n      }, __jsx(Col, {\n        span: 16\n      }, \"Total\"), __jsx(Col, {\n        span: 8\n      }, this.state.totalPriceOfItems))))) : __jsx(\"div\", null, \"Cart is Empty To add items into cart click\", __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", null, \" Home\")))));\n    }\n  }]);\n\n  return CartList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    itemsInCart: state.itemsInCart\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItemsinCart: getItemsinCart\n})(CartList);","map":null,"metadata":{},"sourceType":"module"}