{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Menu, Badge } from 'antd';\nimport { Component } from 'react';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport actions from \"../redux/action\";\nimport { connect } from \"react-redux\";\nvar getItemsinCart = actions.getItemsinCart;\n\nvar CartIcon = /*#__PURE__*/function (_Component) {\n  _inherits(CartIcon, _Component);\n\n  var _super = _createSuper(CartIcon);\n\n  function CartIcon(props) {\n    var _this;\n\n    _classCallCheck(this, CartIcon);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(CartIcon, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getItemsinCart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"span\", null, __jsx(Badge, {\n        count: this.props.itemsInCart ? this.props.itemsInCart.length : 0\n      }, __jsx(ShoppingCartOutlined, {\n        style: {\n          fontSize: \"20px\"\n        }\n      })));\n    }\n  }]);\n\n  return CartIcon;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    itemsInCart: state.itemsInCart\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItemsinCart: getItemsinCart\n})(CartIcon);","map":null,"metadata":{},"sourceType":"module"}