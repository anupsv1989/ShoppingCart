{"ast":null,"code":"// import { delay } from \"redux-saga\";\nimport { call, all, put, takeEvery, takeLatest } from 'redux-saga/effects';\nlet headers = {\n  'Content-Type': 'application/json'\n};\nexport async function get(url, data) {\n  //\n  return new Promise(function (resolve, reject) {\n    try {\n      if (null === url || undefined === url || '' === url) {\n        reject('URL not present.');\n      } else {\n        const token = getCookie('id_token');\n\n        if (undefined !== token) {\n          headers.Authorization = 'Bearer ' + token;\n        }\n\n        const options = {\n          credentials: 'include',\n          // Needed to set the cookies in few browsers (Safari)\n          method: 'GET',\n          headers: headers // body: JSON.stringify(data)\n\n        };\n        fetch(url, options).then(res => {\n          if (200 === res.status) {\n            return res.json();\n          } else {\n            const error = {\n              response: res\n            };\n\n            _validateError(error, resolve, reject);\n          }\n        }).then(res => {\n          resolve(res);\n        });\n      }\n    } catch (error) {\n      _validateError(error, resolve, reject);\n    }\n  });\n}\n\nconst fetchListData = async () => await dataAccess.get(\"https://api.jsonbin.io/b/5e8c3a45af7c476bc47e477d\");\n\nfunction* onFetchItem() {\n  // yield delay(4000);\n  console.log(\"Inside sAga On Fethc Item\"); // let res = localStorage.getItem(\"parentReleaseData\")\n  // yield put({ type: \"FETCH_ITEM_SUCCESS\", result: res });\n\n  let errMsg = \"Error in fetching data.\";\n\n  try {\n    const searchResult = yield call(fetchListData); //Saga is suspended until the Promise returned by call\n\n    if (searchResult !== undefined) {\n      if (searchResult.length > 0) {\n        yield put(actions.onFetchItemSuccess(searchResult)); //which instructs the middleware to dispatch a action\n      } else {\n        yield put(actions.onFetchItemError(errMsg));\n      }\n    }\n  } catch (error) {\n    // notification('error', \"Something went wrong. Please try again later.\");\n    yield put(actions.onFetchItemError(errMsg));\n  }\n} // export function* watchAgeUp() {\n//     yield takeLatest(\"AGE_UP\", ageUpAsync);\n// }\n\n\nexport default function* rootSaga() {\n  yield takeEvery(\"FETCH_ITEM\", onFetchItem);\n}","map":{"version":3,"sources":["D:/RandDChamber/MyGitHub/ShoppingCart/shoppingcart/redux/rootSaga.js"],"names":["call","all","put","takeEvery","takeLatest","headers","get","url","data","Promise","resolve","reject","undefined","token","getCookie","Authorization","options","credentials","method","fetch","then","res","status","json","error","response","_validateError","fetchListData","dataAccess","onFetchItem","console","log","errMsg","searchResult","length","actions","onFetchItemSuccess","onFetchItemError","rootSaga"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,UAApC,QAAsD,oBAAtD;AAGA,IAAIC,OAAO,GAAG;AACV,kBAAgB;AADN,CAAd;AAGA,OAAO,eAAeC,GAAf,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACjC;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAI;AACA,UAAI,SAASJ,GAAT,IAAgBK,SAAS,KAAKL,GAA9B,IAAqC,OAAOA,GAAhD,EAAqD;AACjDI,QAAAA,MAAM,CAAC,kBAAD,CAAN;AACH,OAFD,MAEO;AACH,cAAME,KAAK,GAAGC,SAAS,CAAC,UAAD,CAAvB;;AACA,YAAIF,SAAS,KAAKC,KAAlB,EAAyB;AACrBR,UAAAA,OAAO,CAACU,aAAR,GAAwB,YAAYF,KAApC;AACH;;AACD,cAAMG,OAAO,GAAG;AACZC,UAAAA,WAAW,EAAE,SADD;AACY;AACxBC,UAAAA,MAAM,EAAE,KAFI;AAGZb,UAAAA,OAAO,EAAEA,OAHG,CAIZ;;AAJY,SAAhB;AAMAc,QAAAA,KAAK,CAACZ,GAAD,EAAMS,OAAN,CAAL,CACKI,IADL,CACUC,GAAG,IAAI;AACT,cAAI,QAAQA,GAAG,CAACC,MAAhB,EAAwB;AACpB,mBAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,WAFD,MAEO;AACH,kBAAMC,KAAK,GAAG;AAAEC,cAAAA,QAAQ,EAAEJ;AAAZ,aAAd;;AACAK,YAAAA,cAAc,CAACF,KAAD,EAAQd,OAAR,EAAiBC,MAAjB,CAAd;AACH;AACJ,SARL,EASKS,IATL,CASUC,GAAG,IAAI;AACTX,UAAAA,OAAO,CAACW,GAAD,CAAP;AACH,SAXL;AAYH;AACJ,KA3BD,CA2BE,OAAOG,KAAP,EAAc;AACZE,MAAAA,cAAc,CAACF,KAAD,EAAQd,OAAR,EAAiBC,MAAjB,CAAd;AACH;AACJ,GA/BM,CAAP;AAgCH;;AAED,MAAMgB,aAAa,GAAG,YAClB,MAAMC,UAAU,CAACtB,GAAX,CAAe,mDAAf,CADV;;AAGA,UAAUuB,WAAV,GAAwB;AACpB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAFoB,CAGpB;AACA;;AAEA,MAAIC,MAAM,GAAG,yBAAb;;AACA,MAAI;AACA,UAAMC,YAAY,GAAG,MAAMjC,IAAI,CAAC2B,aAAD,CAA/B,CADA,CAC+C;;AAC/C,QAAIM,YAAY,KAAKrB,SAArB,EAAgC;AAC5B,UAAIqB,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AACzB,cAAMhC,GAAG,CAACiC,OAAO,CAACC,kBAAR,CAA2BH,YAA3B,CAAD,CAAT,CADyB,CAC2B;AACvD,OAFD,MAEO;AACH,cAAM/B,GAAG,CAACiC,OAAO,CAACE,gBAAR,CAAyBL,MAAzB,CAAD,CAAT;AACH;AACJ;AACJ,GATD,CASE,OAAOR,KAAP,EAAc;AACZ;AACA,UAAMtB,GAAG,CAACiC,OAAO,CAACE,gBAAR,CAAyBL,MAAzB,CAAD,CAAT;AACH;AACJ,C,CAED;AACA;AACA;;;AAGA,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMnC,SAAS,CAAC,YAAD,EAAe0B,WAAf,CAAf;AACH","sourcesContent":["// import { delay } from \"redux-saga\";\r\nimport { call, all, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\n\r\n\r\nlet headers = {\r\n    'Content-Type': 'application/json'\r\n};\r\nexport async function get(url, data) {\r\n    //\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            if (null === url || undefined === url || '' === url) {\r\n                reject('URL not present.');\r\n            } else {\r\n                const token = getCookie('id_token');\r\n                if (undefined !== token) {\r\n                    headers.Authorization = 'Bearer ' + token;\r\n                }\r\n                const options = {\r\n                    credentials: 'include', // Needed to set the cookies in few browsers (Safari)\r\n                    method: 'GET',\r\n                    headers: headers,\r\n                    // body: JSON.stringify(data)\r\n                };\r\n                fetch(url, options)\r\n                    .then(res => {\r\n                        if (200 === res.status) {\r\n                            return res.json();\r\n                        } else {\r\n                            const error = { response: res };\r\n                            _validateError(error, resolve, reject);\r\n                        }\r\n                    })\r\n                    .then(res => {\r\n                        resolve(res);\r\n                    });\r\n            }\r\n        } catch (error) {\r\n            _validateError(error, resolve, reject);\r\n        }\r\n    });\r\n}\r\n\r\nconst fetchListData = async () =>\r\n    await dataAccess.get(\"https://api.jsonbin.io/b/5e8c3a45af7c476bc47e477d\");\r\n\r\nfunction* onFetchItem() {\r\n    // yield delay(4000);\r\n    console.log(\"Inside sAga On Fethc Item\")\r\n    // let res = localStorage.getItem(\"parentReleaseData\")\r\n    // yield put({ type: \"FETCH_ITEM_SUCCESS\", result: res });\r\n\r\n    let errMsg = \"Error in fetching data.\"\r\n    try {\r\n        const searchResult = yield call(fetchListData);//Saga is suspended until the Promise returned by call\r\n        if (searchResult !== undefined) {\r\n            if (searchResult.length > 0) {\r\n                yield put(actions.onFetchItemSuccess(searchResult));//which instructs the middleware to dispatch a action\r\n            } else {\r\n                yield put(actions.onFetchItemError(errMsg));\r\n            }\r\n        }\r\n    } catch (error) {\r\n        // notification('error', \"Something went wrong. Please try again later.\");\r\n        yield put(actions.onFetchItemError(errMsg));\r\n    }\r\n}\r\n\r\n// export function* watchAgeUp() {\r\n//     yield takeLatest(\"AGE_UP\", ageUpAsync);\r\n// }\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(\"FETCH_ITEM\", onFetchItem);\r\n}"]},"metadata":{},"sourceType":"module"}