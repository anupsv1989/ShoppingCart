{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  shoppingListData: [],\n  itemsInCart: []\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"FETCH_ITEM_SUCCESS\":\n      console.log(\"Inside reducer\", action.result);\n      newState.shoppingListData = action.result.items;\n      break;\n\n    case \"GET_ITEMS_IN_CART\":\n      newState.itemsInCart;\n      console.log(\"To get items in cart \", newState.itemsInCart);\n      break;\n\n    case \"ADD_ITEM_TO_CART\":\n      console.log(\"Addinf more items \", action.payload);\n      console.log(\"Addinf more items newState.itemsInCart\", newState.itemsInCart);\n      newState.itemsInCart = newState.itemsInCart.push(action.payload);\n      console.log(\"aFTER additng more items newState.itemsInCart\", newState.itemsInCart);\n  }\n\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/RandDChamber/MyGitHub/AdobeShoppingCart/ShoppingCart/redux/rootReducer.js"],"names":["initialState","shoppingListData","itemsInCart","reducer","state","action","newState","type","console","log","result","items","payload","push"],"mappings":";;;;;;AAGA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,EADD;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,QAAMC,QAAQ,qBAAQF,KAAR,CAAd;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAK,oBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,MAAM,CAACK,MAArC;AACAJ,MAAAA,QAAQ,CAACL,gBAAT,GAA4BI,MAAM,CAACK,MAAP,CAAcC,KAA1C;AACA;;AAEJ,SAAK,mBAAL;AACIL,MAAAA,QAAQ,CAACJ,WAAT;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,QAAQ,CAACJ,WAA9C;AACA;;AAEJ,SAAK,kBAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,MAAM,CAACO,OAAzC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDH,QAAQ,CAACJ,WAA/D;AACAI,MAAAA,QAAQ,CAACJ,WAAT,GAAuBI,QAAQ,CAACJ,WAAT,CAAqBW,IAArB,CAA0BR,MAAM,CAACO,OAAjC,CAAvB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DH,QAAQ,CAACJ,WAAtE;AAfR;;AAiBA,SAAOI,QAAP;AACH,CArBD;;AA4BA,eAAeH,OAAf","sourcesContent":["\r\n\r\n\r\nconst initialState = {\r\n    shoppingListData: [],\r\n    itemsInCart: []\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n\r\n    switch (action.type) {\r\n        case \"FETCH_ITEM_SUCCESS\":\r\n            console.log(\"Inside reducer\", action.result)\r\n            newState.shoppingListData = action.result.items\r\n            break;\r\n\r\n        case \"GET_ITEMS_IN_CART\":\r\n            newState.itemsInCart;\r\n            console.log(\"To get items in cart \", newState.itemsInCart)\r\n            break;\r\n\r\n        case \"ADD_ITEM_TO_CART\":\r\n            console.log(\"Addinf more items \", action.payload)\r\n            console.log(\"Addinf more items newState.itemsInCart\", newState.itemsInCart)\r\n            newState.itemsInCart = newState.itemsInCart.push(action.payload)\r\n            console.log(\"aFTER additng more items newState.itemsInCart\", newState.itemsInCart)\r\n    }\r\n    return newState;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}