{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Card, Col, Row, Button } from 'antd';\nimport actions from \"../redux/action\";\nimport { connect } from \"react-redux\";\nconst {\n  onAddItemtoCart,\n  getItemsinCart\n} = actions;\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"searchFilteredList\", val => {\n      console.log(\"Search value\", val);\n      let tempArr = [];\n      let {\n        listData: currentData = []\n      } = this.props;\n      currentData.map(item => {\n        if (item.name == val) {\n          tempArr.push(item);\n        }\n      });\n      this.setState({\n        displayList: tempArr\n      });\n    });\n\n    _defineProperty(this, \"amountFilteredList\", rangeVal => {\n      // if the price range is between rangeval then add that item to another array\n      let tempArr = [];\n      let currentData = this.props.listData;\n      currentData.map(item => {\n        if (item.price.actual > rangeVal[0] && item.price.actual < rangeVal[1]) {\n          tempArr.push(item);\n        }\n      });\n      this.setState({\n        displayList: tempArr\n      });\n    });\n\n    _defineProperty(this, \"addItemtoCart\", (item, index) => {\n      let dataObj = {\n        index,\n        item\n      };\n      this.setState({\n        [index + item.name]: true\n      });\n      this.props.onAddItemtoCart(dataObj);\n      this.props.getItemsinCart();\n    });\n\n    this.state = {\n      existingItemsinCart: [],\n      displayList: [],\n      isDisabled: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"items in cart on update\", nextProps);\n    const {\n      applyRangeFilter = []\n    } = nextProps;\n    this.setState({\n      displayList: nextProps.listData\n    });\n\n    if (nextProps.renderSortedData && nextProps.renderSortedData.length > 0) {\n      this.setState({\n        displayList: nextProps.renderSortedData\n      });\n    }\n\n    if (applyRangeFilter.length > 0) {\n      this.amountFilteredList(applyRangeFilter);\n    }\n\n    if (nextProps.applySearchFilter && nextProps.applySearchFilter != \"\") {\n      this.searchFilteredList(nextProps.applySearchFilter);\n    }\n  }\n\n  componentDidMount() {\n    this.props.getItemsinCart();\n  }\n\n  render() {\n    const {\n      listData: displayList = []\n    } = this.props;\n    console.log(\"renderSortedData <<<<<>>>>>> renderSortedData\", this.props.renderSortedData);\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"site-card-wrapper\"\n    }, __jsx(Row, {\n      gutter: 16\n    }, this.state.displayList.map((item, index) => __jsx(Col, {\n      span: 4,\n      className: \"listCols\",\n      key: index\n    }, __jsx(Card, {\n      style: {\n        padding: \"7px\"\n      },\n      cover: __jsx(\"img\", {\n        alt: \"example\",\n        src: \"https://cdn.britannica.com/s:700x500/77/170477-050-1C747EE3/Laptop-computer.jpg\"\n      })\n    }, __jsx(\"p\", null, item.name), __jsx(\"p\", null, __jsx(\"span\", null, __jsx(\"strong\", null, \" \\u20B9\", item.price.actual, \" \"), \" \"), __jsx(\"span\", {\n      style: {\n        textDecoration: \"line-through\",\n        fontSize: \"12px\",\n        fontWeight: \"bold\",\n        color: \"#A9A9A9\",\n        marginLeft: \"8px\"\n      }\n    }, \" \", item.price.display), __jsx(\"span\", {\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"700\",\n        color: \"#009966\",\n        marginLeft: \"8px\"\n      }\n    }, \"  \", item.discount, \"% off\")), __jsx(Button, {\n      type: \"primary\",\n      shape: \"round\",\n      size: \"middle\",\n      disabled: this.state[index + item.name] ? this.state[index + item.name] : this.state.isDisabled,\n      style: {\n        backgroundColor: \"#FFCC00\",\n        border: \"0px\",\n        color: \"#000000\",\n        marginLeft: \"12%\"\n      },\n      onClick: () => this.addItemtoCart(item, index)\n    }, \"Add to Cart\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemsInCart: state.itemsInCart,\n    applySearchFilter: state.applySearchFilter,\n    applyRangeFilter: state.applyRangeFilter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onAddItemtoCart,\n  getItemsinCart\n})(ShoppingList);","map":null,"metadata":{},"sourceType":"module"}