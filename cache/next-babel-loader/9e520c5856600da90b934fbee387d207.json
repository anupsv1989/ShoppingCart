{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\nimport Filter from \"../components/Filter\";\nimport Sorter from \"../components/Sorter\";\nimport ShoppingList from \"../components/ShoppingList\";\nimport { List, Avatar, Row, Col, Card, Button } from 'antd';\nimport CartIcon from \"../components/CartIcon\";\nimport actions from \"../redux/action\";\nimport { connect } from \"react-redux\";\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nconst {\n  onFetchItem\n} = actions;\nconst jsondata = [{\n  \"name\": \"item 1\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 2\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 3\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 4\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 5\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 6\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 7\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}, {\n  \"name\": \"item 8\",\n  \"price\": {\n    \"actual\": 319,\n    \"display\": 900\n  },\n  \"discount\": 64\n}];\n\nclass ListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"callChild\", dataFromSorter => {\n      this.setState({\n        dataFromSorter: dataFromSorter\n      });\n    });\n\n    this.state = {\n      dataFromSorter: []\n    };\n  }\n\n  render() {\n    console.log(\"props data\", this.props.shoppingListData);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"containerDiv\"\n    }, __jsx(\"div\", {\n      className: \"leftNav\"\n    }, __jsx(Filter, null)), __jsx(\"div\", {\n      className: \"mainComponent\"\n    }, __jsx(Sorter, {\n      callParent: this.callChild,\n      listData: this.props.shoppingListData\n    }), __jsx(ShoppingList, {\n      listData: this.props.shoppingListData,\n      renderSortedData: this.state.dataFromSorter\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    shoppingListData: state.shoppingListData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onFetchItem\n})(ListPage);","map":null,"metadata":{},"sourceType":"module"}