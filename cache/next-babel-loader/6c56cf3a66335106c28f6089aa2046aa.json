{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"../redux/rootSaga\";\nimport rootReducer from \"../redux/rootReducer\";\n\nconst bindMiddleware = middleware => {\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["D:/RandDChamber/MyGitHub/AdobeShoppingCart/ShoppingCart/redux/createStore.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootSaga","rootReducer","bindMiddleware","middleware","composeWithDevTools","require","configureStore","initialState","sagaMiddleware","store","sagaTask","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAIA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,cAAc,GAAGC,UAAU,IAAI;AACjC,YAA2C;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AACA,WAAOD,mBAAmB,CAACP,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAA1B;AACH;;AACD,SAAON,eAAe,CAAC,GAAGM,UAAJ,CAAtB;AACH,CAND;;AAQA,SAASG,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2C;AACvC,QAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMU,KAAK,GAAGX,WAAW,CACrBG,WADqB,EAErBM,YAFqB,EAGrBL,cAAc,CAAC,CAACM,cAAD,CAAD,CAHO,CAAzB;AAMAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBX,QAAnB,CAAjB;AAEA,SAAOS,KAAP;AACH;;AAED,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n\r\n\r\nimport rootSaga from \"../redux/rootSaga\";\r\nimport rootReducer from \"../redux/rootReducer\";\r\n\r\nconst bindMiddleware = middleware => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const { composeWithDevTools } = require('redux-devtools-extension')\r\n        return composeWithDevTools(applyMiddleware(...middleware))\r\n    }\r\n    return applyMiddleware(...middleware)\r\n}\r\n\r\nfunction configureStore(initialState = {}) {\r\n    const sagaMiddleware = createSagaMiddleware()\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        bindMiddleware([sagaMiddleware])\r\n    )\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga)\r\n\r\n    return store\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}