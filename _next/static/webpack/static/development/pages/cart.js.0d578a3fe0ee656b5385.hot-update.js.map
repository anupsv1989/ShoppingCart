{"version":3,"file":"static/webpack/static\\development\\pages\\cart.js.0d578a3fe0ee656b5385.hot-update.js","sources":["webpack:///./components/CartList.js"],"sourcesContent":["\r\nimport { Component } from \"react\";\r\nimport { Card, Col, Row, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport actions from \"../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\n\r\nconst { getItemsinCart, deleteItemfromCart } = actions;\r\n\r\nclass CartList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cartDisplayItems: [],\r\n            initialItems: 1,\r\n            totalPriceOfItems: 0,\r\n            totalDiscountedPrice: 0,\r\n            totalPriceDisplay: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _this = this;\r\n        this.setState({\r\n            cartDisplayItems: this.props.itemsInCart,\r\n        }, () => {\r\n            if (_this.props.itemsInCart && _this.props.itemsInCart.length > 0)\r\n                _this.calculatePriceSum();\r\n        })\r\n\r\n        console.log(\" this.props.itemsInCart did mount\", this.props.itemsInCart)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"NExt props in cartjs\", nextProps)\r\n    }\r\n\r\n    calculatePriceSum = () => {\r\n        let price = 0;\r\n        let discountedPrice = 0;\r\n        this.state.cartDisplayItems.map(x => {\r\n            price += x.item.price.actual;\r\n            discountedPrice += x.item.price.display;\r\n\r\n        })\r\n\r\n        let discPrice = discountedPrice - price;\r\n\r\n        this.setState({\r\n            totalPriceOfItems: price,\r\n            totalPriceDisplay: discountedPrice,\r\n            totalDiscountedPrice: discPrice\r\n        })\r\n        return price;\r\n    }\r\n\r\n    increment = (item, index) => {\r\n        let price = this.state.totalPriceOfItems;\r\n        let discPrice = this.state.totalDiscountedPrice;\r\n        let firstPrice = this.state.totalPriceDisplay;\r\n\r\n        price += item.price.actual;\r\n        firstPrice += item.price.display;\r\n        discPrice = firstPrice - price;\r\n\r\n\r\n        this.setState({\r\n            totalPriceOfItems: price,\r\n            totalPriceDisplay: firstPrice,\r\n            totalDiscountedPrice: discPrice,\r\n            [index + item.name]: this.state[index + item.name] ? (this.state[index + item.name] + 1) : (this.state.initialItems + 1)\r\n        })\r\n    }\r\n\r\n    decrement = (item, index) => {\r\n        let price = this.state.totalPriceOfItems;\r\n        let discPrice = this.state.totalDiscountedPrice;\r\n        let firstPrice = this.state.totalPriceDisplay;\r\n        if (this.state[index + item.name] != undefined) {\r\n            price -= item.price.actual;\r\n            firstPrice -= item.price.display;\r\n            discPrice = firstPrice - price;\r\n        }\r\n        this.setState({\r\n            totalPriceOfItems: price,\r\n            totalPriceDisplay: firstPrice,\r\n            totalDiscountedPrice: discPrice,\r\n            [index + item.name]: this.state[index + item.name] ? (this.state[index + item.name] - 1) : (this.state.initialItems - 1)\r\n        })\r\n    }\r\n\r\n    removeItems = (item, idx) => {\r\n        let arr = this.state.cartDisplayItems;\r\n        let _this = this;\r\n        let index = arr.map(x => {\r\n            return x.key;\r\n        }).indexOf(item.key);\r\n        arr.splice(index, 1);\r\n\r\n        this.props.deleteItemfromCart(item);\r\n        // this.props.deleteItemfromCart(arr.length);\r\n\r\n        this.setState({\r\n            cartDisplayItems: arr\r\n        }, () => {\r\n            if (_this.state.cartDisplayItems.length > 0) {\r\n                _this.calculatePriceSum();\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { itemsInCart } = this.props;\r\n        return (\r\n            <>\r\n                <div className=\"cartContainerDiv\">\r\n                    {(this.state.cartDisplayItems && this.state.cartDisplayItems.length > 0) ?\r\n                        <div>\r\n                            <div className=\"cartContainerDiv__cartLeftNav\">\r\n                                <div>\r\n\r\n                                    {this.state.cartDisplayItems.map((i, index) =>\r\n                                        <Row gutter={16} key={index} className=\"cartContainerDiv__cartLeftNav--Row\">\r\n                                            <Col span={6}>\r\n                                                <div className=\"cartContainerDiv__cartLeftNav--cartListDiv\">\r\n                                                    <img\r\n                                                        alt=\"example\"\r\n                                                        src=\"https://cdn.britannica.com/s:700x500/77/170477-050-1C747EE3/Laptop-computer.jpg\"\r\n                                                    />\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <div className=\"cartContainerDiv__cartLeftNav--cartListText\">\r\n                                                    <span>{i.item.name}</span>\r\n                                                    <p>\r\n                                                        <span><strong>&#8377; {i.item.price.actual}</strong> </span>\r\n                                                        <span className=\"shoppingListWrap__listCols--cardprice\">\r\n                                                            {i.item.price.display}\r\n                                                        </span>\r\n                                                        <span className=\"shoppingListWrap__listCols--carddiscount\">\r\n                                                            {i.item.discount} % off\r\n                                                </span>\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <div className=\"cartContainerDiv__cartLeftNav--cartListText\">\r\n                                                    <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />}\r\n                                                        size=\"middle\"\r\n                                                        onClick={() => this.increment(i.item, index)} />\r\n\r\n                                                    <Button type=\"dashed\" style={{ margin: \"5px\" }}>\r\n                                                        {this.state[index + i.item.name] > 0 ? this.state[index + i.item.name] : this.state.initialItems}\r\n                                                    </Button>\r\n\r\n                                                    <Button type=\"primary\" shape=\"circle\" icon={<MinusOutlined />}\r\n                                                        size=\"middle\"\r\n                                                        disabled={this.state[index + i.item.name] == 1 ? true : false}\r\n                                                        onClick={() => this.decrement(i.item, index)} />\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <div className=\"cartContainerDiv__cartLeftNav--cartListText\">\r\n                                                    <Button type=\"link\" danger onClick={() => this.removeItems(i.item, index)}>\r\n                                                        <strong> Remove </strong>\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cartContainerDiv__cartRightNav\">\r\n                                <Card title=\"Price Details\" className=\"cartContainerDiv__cartRightNav--card\">\r\n\r\n                                    <Row gutter={16} className=\"cartContainerDiv__cartRightNav--row\">\r\n                                        <Col span={16}>\r\n                                            Price\r\n                                </Col>\r\n                                        <Col span={8}>\r\n                                            {this.state.totalPriceDisplay}\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={16} className=\"cartContainerDiv__cartRightNav--row\">\r\n                                        <Col span={16}>\r\n                                            Discount\r\n                                </Col>\r\n                                        <Col span={8}>\r\n                                            {this.state.totalDiscountedPrice}\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <Row gutter={16} className=\"cartContainerDiv__cartRightNav--row\">\r\n                                        <Col span={16}>\r\n                                            Total\r\n                                </Col>\r\n                                        <Col span={8}>\r\n                                            {this.state.totalPriceOfItems}\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n\r\n                        <div>\r\n                            Cart is Empty\r\n                            To add items into cart click\r\n                                      <Link href='/'>\r\n                                <a> Home</a>\r\n                            </Link>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemsInCart: state.itemsInCart,\r\n    };\r\n};\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, { getItemsinCart, deleteItemfromCart }\r\n)(CartList);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA4BA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AA/DA;AAiEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAhFA;AAkFA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAlGA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AAEA;AACA;;;AAEA;AACA;AACA;;;AA6EA;AAAA;AACA;AADA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAmnNA;AACA;AAsNA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}