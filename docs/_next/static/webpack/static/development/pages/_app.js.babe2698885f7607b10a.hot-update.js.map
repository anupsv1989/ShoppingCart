{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.babe2698885f7607b10a.hot-update.js","sources":["webpack:///./redux/rootSaga.js"],"sourcesContent":["// import { delay } from \"redux-saga\";\r\nimport { call, all, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport actions from \"./action\";\r\n\r\nlet headers = {\r\n    'Content-Type': 'application/json'\r\n};\r\n\r\nexport async function get(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const options = {\r\n                method: 'GET',\r\n                headers: headers,\r\n            };\r\n            fetch(url, options)\r\n                .then(res => {\r\n                    if (200 === res.status) {\r\n                        return res.json();\r\n                    } else {\r\n                        const error = { response: res };\r\n                        console.log(\"Error\");\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    resolve(res);\r\n                });\r\n\r\n        } catch (error) {\r\n            console.log(\"Error\");\r\n        }\r\n    });\r\n}\r\n\r\nconst fetchListData = async () =>\r\n    await get(\"https://api.jsonbin.io/b/5e8c3ad0ff9c906bdf1d5380\");\r\n// await get(\"https://api.jsonbin.io/b/5e8c3a45af7c476bc47e477d\");\r\n\r\nfunction* onFetchItem() {\r\n    // yield delay(4000);\r\n    console.log(\"Inside sAga On Fethc Item\")\r\n    // let res = localStorage.getItem(\"parentReleaseData\")\r\n    // yield put({ type: \"FETCH_ITEM_SUCCESS\", result: res });\r\n\r\n    let errMsg = \"Error in fetching data.\"\r\n    try {\r\n        // const searchResult = yield call(fetchListData);//Saga is suspended until the Promise returned by call\r\n        // commented the api call and appended static data as all the api links have expired .\r\n\r\n        const searchResult = [\r\n            { \"name\": \"item 1\", \"price\": { \"actual\": 100, \"display\": 1000 }, \"discount\": 90 },\r\n            { \"name\": \"item 2\", \"price\": { \"actual\": 200, \"display\": 1000 }, \"discount\": 80 },\r\n            { \"name\": \"item 3\", \"price\": { \"actual\": 300, \"display\": 1000 }, \"discount\": 70 },\r\n            { \"name\": \"item 4\", \"price\": { \"actual\": 400, \"display\": 1000 }, \"discount\": 60 },\r\n            { \"name\": \"item 5\", \"price\": { \"actual\": 500, \"display\": 1000 }, \"discount\": 50 },\r\n            { \"name\": \"item 6\", \"price\": { \"actual\": 600, \"display\": 1000 }, \"discount\": 40 },\r\n            { \"name\": \"item 7\", \"price\": { \"actual\": 700, \"display\": 1000 }, \"discount\": 30 },\r\n            { \"name\": \"item 8\", \"price\": { \"actual\": 800, \"display\": 1000 }, \"discount\": 20 }\r\n        ];\r\n        if (searchResult !== undefined) {\r\n            console.log(\"Inside sAga On Fethc Item 1 \", searchResult)\r\n            if (searchResult.length > 0) {\r\n                yield put(actions.onFetchItemSuccess(searchResult));//which instructs the middleware to dispatch a action\r\n            } else {\r\n                yield put(actions.onFetchItemError(errMsg));\r\n            }\r\n        }\r\n    } catch (error) {\r\n        // notification('error', \"Something went wrong. Please try again later.\");\r\n        yield put(actions.onFetchItemError(errMsg));\r\n    }\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(\"FETCH_ITEM\", onFetchItem);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAsCA;AAoCA;AACA;AA3EA;AACA;AACA;AAEA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AANA;AAQA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AACA;AAqBA;AACA;AAvBA;AAAA;AAAA;AAAA;AACA;AADA;AAwBA;AACA;AAzBA;AAAA;AAAA;AACA;AADA;AAAA;AA0BA;AACA;AA3BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AA+BA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}